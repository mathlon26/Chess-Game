<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_Player_8h_source" xml:lang="en-US">
<title>Player.h</title>
<indexterm><primary>/home/huplo/Coding/Projects/C++/chess-game/include/Player.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;PLAYER__H</emphasis>
2 <emphasis role="preprocessor">#define&#32;PLAYER__H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_Move_8h">Move.h</link>&quot;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_Piece_8h">Piece.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_Style_8hpp">../dependencies/Style.hpp</link>&quot;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
8 
9 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_Style_8hpp_1ab87bacfdad76e61b9412d7124be44c1c">Color</link>&#32;<link linkend="_Player_8h_1a301cfd5fe9a22cb30292f6e1523247d7">PlayerColor</link>;
10 
11 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classPlayer_1ad061cf938c523c0e7d529d5591224250">Player</link>
12 {
13 <emphasis role="keyword">public</emphasis>:
14 &#32;&#32;&#32;&#32;<link linkend="_classPlayer_1ad061cf938c523c0e7d529d5591224250">Player</link>(<link linkend="_Player_8h_1a301cfd5fe9a22cb30292f6e1523247d7">PlayerColor</link>&#32;color);
15 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_classPlayer_1a278aa7f854813b3d53589d51e74c6cf1">~Player</link>()&#32;=&#32;0;
16 
17 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;std::string&#32;<link linkend="_classPlayer_1a5afb4b96be0f18b4bc840f44e06072cb">GetInput</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classBoard">Board</link>*&#32;<emphasis role="keyword">const</emphasis>&#32;board)&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
18 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;std::string&#32;<link linkend="_classPlayer_1a313b6e73fb54e242e318579901ee93da">Name</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
19 
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classPlayer_1a09eaaa8872fcb43e72c7739ab619c866">IsBot</link>()&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;}
21 
22 &#32;&#32;&#32;&#32;<link linkend="_Player_8h_1a301cfd5fe9a22cb30292f6e1523247d7">PlayerColor</link>&#32;<link linkend="_classPlayer_1af97f460cbb2594def32e32d9046f73ec">Color</link>()&#32;<emphasis role="keyword">const</emphasis>;
23 &#32;&#32;&#32;&#32;std::vector&lt;Piece&#32;*&gt;&#32;<link linkend="_classPlayer_1a8248c589e9edeb32a290f48d82bad7ac">GetCaptures</link>()&#32;<emphasis role="keyword">const</emphasis>;
24 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classPlayer_1a8600584d0d313d9c9183f8676e30b9c2">AddCapture</link>(<link linkend="_classPiece">Piece</link>&#32;*captured);
25 
26 <emphasis role="keyword">protected</emphasis>:
27 &#32;&#32;&#32;&#32;<link linkend="_Player_8h_1a301cfd5fe9a22cb30292f6e1523247d7">PlayerColor</link>&#32;<link linkend="_classPlayer_1adff61d6fe8f9e732c4dbe5a6bbcb5e42">m_color</link>;
28 &#32;&#32;&#32;&#32;std::vector&lt;Piece&#32;*&gt;&#32;<link linkend="_classPlayer_1aaef4079e864580e1b197620491d74130">m_captures</link>;
29 };
30 
31 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;PLAYER__H</emphasis>
</programlisting></section>

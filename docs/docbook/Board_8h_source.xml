<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_Board_8h_source" xml:lang="en-US">
<title>Board.h</title>
<indexterm><primary>/home/huplo/Coding/Projects/C++/chess-game/include/Board.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;BOARD__H</emphasis>
2 <emphasis role="preprocessor">#define&#32;BOARD__H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_Piece_8h">Piece.h</link>&quot;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_Move_8h">Move.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;array&gt;</emphasis>
7 
8 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classPlayer">Player</link>;
9 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classPiece">Piece</link>;
10 
11 <emphasis role="comment">//&#32;A&#32;structure&#32;that&#32;holds&#32;all&#32;information&#32;needed&#32;to&#32;undo&#32;a&#32;move.</emphasis>
12 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structMoveRecord">MoveRecord</link>&#32;{
13 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structMoveRecord_1ad01bd3d9191228198472736d116fac7d">x0</link>,&#32;<link linkend="_structMoveRecord_1ac38a2c9028ec26e1fc2362231dc44e5f">y0</link>,&#32;<link linkend="_structMoveRecord_1a0ba5bf01546d407c234f3419dbf21d83">x1</link>,&#32;<link linkend="_structMoveRecord_1ad12e234364e89f435991293fff175a72">y1</link>;
14 &#32;&#32;&#32;&#32;<link linkend="_classPiece">Piece</link>*&#32;<link linkend="_structMoveRecord_1a07bcb9f0bafd4ccc53cdccae68c20c0f">movedPiece</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;piece&#32;originally&#32;at&#32;the&#32;start&#32;square.</emphasis>
15 &#32;&#32;&#32;&#32;<link linkend="_classPiece">Piece</link>*&#32;<link linkend="_structMoveRecord_1a28419c377c24b254ab4070a60d782901">capturedPiece</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;piece&#32;that&#32;was&#32;captured&#32;(if&#32;any).&#32;For&#32;en&#32;passant,&#32;this&#32;is&#32;stored&#32;separately.</emphasis>
16 &#32;&#32;&#32;&#32;<link linkend="_classPiece">Piece</link>*&#32;<link linkend="_structMoveRecord_1ae26c28a77959d5f472206fdfdae0d493">replacementPiece</link>;&#32;&#32;<emphasis role="comment">//&#32;If&#32;a&#32;promotion&#32;occurred,&#32;this&#32;is&#32;the&#32;new&#32;piece.</emphasis>
17 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structMoveRecord_1add054033b276ec4e0d25daab459255a9">enPassantUsed</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;True&#32;if&#32;the&#32;move&#32;used&#32;an&#32;en&#32;passant&#32;capture.</emphasis>
18 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Save&#32;the&#32;en&#32;passant&#32;state&#32;from&#32;before&#32;the&#32;move.</emphasis>
19 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structMoveRecord_1a3f089cda41c1adcebd9c9b1f0116de98">prevEnPassantAvailable</link>;
20 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structMoveRecord_1ae45c86ca85a0de5db14a7e8bbd59a40d">prevEnPassantX</link>;
21 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structMoveRecord_1a9c30403d5f210cdb51ae3060d94e7ac8">prevEnPassantY</link>;
22 };
23 
24 
25 
26 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classBoard_1a9ee491d4fea680cf69b033374a9fdfcb">Board</link>
27 {
28 <emphasis role="keyword">public</emphasis>:
29 &#32;&#32;&#32;&#32;<link linkend="_classBoard_1a9ee491d4fea680cf69b033374a9fdfcb">Board</link>();
30 &#32;&#32;&#32;&#32;<link linkend="_classBoard_1af73f45730119a1fd8f6670f53f959e68">~Board</link>();
31 
32 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classBoard_1a54a0fe14d04fa09928d8d6fc26a85cc2">Draw</link>()&#32;<emphasis role="keyword">const</emphasis>;
33 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classBoard_1af1f69a1b91ec7fa07d0a85ce04d103ec">ExecuteMove</link>(<link linkend="_classMove">Move</link>&#32;&amp;move,&#32;<link linkend="_classPlayer">Player</link>*&#32;executor);
34 &#32;&#32;&#32;&#32;<link linkend="_structMoveRecord">MoveRecord</link>&#32;<link linkend="_classBoard_1a23d1fdbb5e49d70b51c0cda70d003597">CommitMoveRecord</link>(<link linkend="_classMove">Move</link>&#32;&amp;move,&#32;<link linkend="_classPiece">Piece</link>*&#32;replacement);
35 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classBoard_1ab9670780329f8763c49881cfada761c2">RevertMoveRecord</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structMoveRecord">MoveRecord</link>&#32;&amp;record);
36 
37 &#32;&#32;&#32;&#32;<link linkend="_classPiece">Piece</link>*&#32;<link linkend="_classBoard_1ad23c997a2d137d40511dfd327248de3d">GetPiece</link>(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)&#32;<emphasis role="keyword">const</emphasis>;
38 &#32;&#32;&#32;&#32;std::vector&lt;Move&gt;&#32;<link linkend="_classBoard_1a1ff64194b703edb37a5c9770de17e48a">GetPossibleMoves</link>(<link linkend="_Style_8hpp_1ab87bacfdad76e61b9412d7124be44c1c">Color</link>&#32;color)&#32;<emphasis role="keyword">const</emphasis>;
39 
40 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;En&#32;passant&#32;support.</emphasis>
41 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classBoard_1aa178becb7490422c52bf03c5956446e9">IsEnPassantTarget</link>(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)&#32;<emphasis role="keyword">const</emphasis>;
42 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classBoard_1a4da590b5c737674de91dcea89780db69">ClearEnPassantTarget</link>();
43 
44 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;support.</emphasis>
45 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classBoard_1a20bcaee5725f1fc0e57b0e59a004153a">IsKingChecked</link>(<link linkend="_Style_8hpp_1ab87bacfdad76e61b9412d7124be44c1c">Color</link>&#32;color)&#32;<emphasis role="keyword">const</emphasis>;
46 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classBoard_1af39b4dc6727c480c32925388ed95ae04">SetKingChecked</link>(<link linkend="_Style_8hpp_1ab87bacfdad76e61b9412d7124be44c1c">Color</link>&#32;color);
47 <emphasis role="keyword">private</emphasis>:
48 &#32;&#32;&#32;&#32;std::array&lt;std::array&lt;Piece*,&#32;8&gt;,&#32;8&gt;&#32;m_board;
49 &#32;&#32;&#32;&#32;
50 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;En&#32;passant&#32;state.</emphasis>
51 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_enPassantAvailable;
52 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_enPassantX;
53 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_enPassantY;
54 
55 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;King&#32;state</emphasis>
56 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_whiteKingInCheck;
57 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_blackKingInCheck;
58 &#32;&#32;&#32;&#32;
59 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Helper&#32;function&#32;to&#32;initialize&#32;the&#32;board&#32;with&#32;all&#32;pieces.</emphasis>
60 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;initializeBoard();
61 };
62 
63 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;BOARD__H</emphasis>
</programlisting></section>

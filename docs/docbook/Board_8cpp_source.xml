<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_Board_8cpp_source" xml:lang="en-US">
<title>Board.cpp</title>
<indexterm><primary>source/Board.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_Board_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;../include/Board.h&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;../include/Piece.h&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;../include/Player.h&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;../include/Pawn.h&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;../include/Rook.h&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;../include/Knight.h&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;../include/Bishop.h&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;../include/Queen.h&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;../include/King.h&quot;</emphasis>&#32;&#32;<emphasis role="comment">//&#32;Assumes&#32;you&#32;have&#32;a&#32;King&#32;class&#32;implemented.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;../include/Move.h&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;../dependencies/Style.hpp&quot;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&lt;sstream&gt;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&lt;cstdlib&gt;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00016"/>00016 
<anchor xml:id="_Board_8cpp_source_1l00017"/>00017 
<anchor xml:id="_Board_8cpp_source_1l00018"/>00018 
<anchor xml:id="_Board_8cpp_source_1l00019"/>00019 <emphasis role="comment">//&#32;Constructor.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00020"/>00020 Board::Board()
<anchor xml:id="_Board_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;:&#32;m_enPassantAvailable(false),&#32;m_enPassantX(-1),&#32;m_enPassantY(-1)
<anchor xml:id="_Board_8cpp_source_1l00022"/>00022 {
<anchor xml:id="_Board_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;board&#32;squares&#32;to&#32;nullptr.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;row&#32;:&#32;m_board)
<anchor xml:id="_Board_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row.fill(<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="_Board_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;
<anchor xml:id="_Board_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;up&#32;pieces&#32;in&#32;their&#32;starting&#32;positions.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;initializeBoard();
<anchor xml:id="_Board_8cpp_source_1l00029"/>00029 }
<anchor xml:id="_Board_8cpp_source_1l00030"/>00030 
<anchor xml:id="_Board_8cpp_source_1l00031"/>00031 <emphasis role="comment">//&#32;Destructor.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00032"/>00032 Board::~Board()
<anchor xml:id="_Board_8cpp_source_1l00033"/>00033 {
<anchor xml:id="_Board_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;i++)
<anchor xml:id="_Board_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;8;&#32;j++)
<anchor xml:id="_Board_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;m_board[i][j];
<anchor xml:id="_Board_8cpp_source_1l00037"/>00037 }
<anchor xml:id="_Board_8cpp_source_1l00038"/>00038 
<anchor xml:id="_Board_8cpp_source_1l00039"/>00039 <emphasis role="keywordtype">void</emphasis>&#32;Board::initializeBoard()
<anchor xml:id="_Board_8cpp_source_1l00040"/>00040 {
<anchor xml:id="_Board_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;---&#32;White&#32;Pieces&#32;---</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Major&#32;pieces&#32;on&#32;row&#32;0.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;m_board[0][0]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rook(PieceColor::BLACK);
<anchor xml:id="_Board_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;m_board[0][1]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Knight(PieceColor::BLACK);
<anchor xml:id="_Board_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;m_board[0][2]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Bishop(PieceColor::BLACK);
<anchor xml:id="_Board_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;m_board[0][3]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Queen(PieceColor::BLACK);
<anchor xml:id="_Board_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;m_board[0][4]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;King(PieceColor::BLACK);
<anchor xml:id="_Board_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;m_board[0][5]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Bishop(PieceColor::BLACK);
<anchor xml:id="_Board_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;m_board[0][6]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Knight(PieceColor::BLACK);
<anchor xml:id="_Board_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;m_board[0][7]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rook(PieceColor::BLACK);
<anchor xml:id="_Board_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pawns&#32;on&#32;row&#32;1.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;8;&#32;++x)
<anchor xml:id="_Board_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_board[1][x]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Pawn(PieceColor::BLACK);
<anchor xml:id="_Board_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;
<anchor xml:id="_Board_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;---&#32;Black&#32;Pieces&#32;---</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pawns&#32;on&#32;row&#32;6.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;8;&#32;++x)
<anchor xml:id="_Board_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_board[6][x]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Pawn(PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Major&#32;pieces&#32;on&#32;row&#32;7.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;m_board[7][0]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rook(PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;m_board[7][1]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Knight(PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;m_board[7][2]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Bishop(PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;m_board[7][3]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Queen(PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;m_board[7][4]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;King(PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;m_board[7][5]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Bishop(PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;m_board[7][6]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Knight(PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;m_board[7][7]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rook(PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00068"/>00068 }
<anchor xml:id="_Board_8cpp_source_1l00069"/>00069 
<anchor xml:id="_Board_8cpp_source_1l00070"/>00070 <emphasis role="keywordtype">void</emphasis>&#32;Board::Draw()<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00071"/>00071 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_Board_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;std::ostringstream&#32;oss;
<anchor xml:id="_Board_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;a&#32;&#32;b&#32;&#32;c&#32;&#32;d&#32;&#32;e&#32;&#32;f&#32;&#32;g&#32;&#32;h\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00074"/>00074 
<anchor xml:id="_Board_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count{0};
<anchor xml:id="_Board_8cpp_source_1l00076"/>00076 
<anchor xml:id="_Board_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;++i)&#32;&#32;{
<anchor xml:id="_Board_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;8&#32;-&#32;i&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00079"/>00079 
<anchor xml:id="_Board_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;8;&#32;++j)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count++&#32;%&#32;2&#32;==&#32;0)
<anchor xml:id="_Board_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\033[44m&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\033[42m&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00085"/>00085 
<anchor xml:id="_Board_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_board[i][j]&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>)
<anchor xml:id="_Board_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_Board_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;Style::Cta(m_board[i][j]-&gt;Color());
<anchor xml:id="_Board_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>&#32;&lt;&lt;&#32;m_board[i][j]-&gt;Symbol()&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\033[0m&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>&#32;&lt;&lt;&#32;8&#32;-&#32;i&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="_Board_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;oss&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\033[0m&#32;&#32;&#32;a&#32;&#32;b&#32;&#32;c&#32;&#32;d&#32;&#32;e&#32;&#32;f&#32;&#32;g&#32;&#32;h&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_Board_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;Style::PrintBox(oss.str(),&#32;<emphasis role="stringliteral">&quot;&#32;Board&#32;&quot;</emphasis>);
<anchor xml:id="_Board_8cpp_source_1l00100"/>00100 }
<anchor xml:id="_Board_8cpp_source_1l00101"/>00101 
<anchor xml:id="_Board_8cpp_source_1l00102"/><link linkend="_Board_8cpp_1aac919280662b1a7e6284a0cacbeba5d1">00102</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_Board_8cpp_1aac919280662b1a7e6284a0cacbeba5d1">LogMoveRecord</link>(<emphasis role="keyword">const</emphasis>&#32;MoveRecord&amp;&#32;record)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Move&#32;Record:\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;From:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;char(<emphasis role="charliteral">&apos;a&apos;</emphasis>&#32;+&#32;record.x0)&#32;&lt;&lt;&#32;8&#32;-&#32;record.y0&#32;
<anchor xml:id="_Board_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;To:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;char(<emphasis role="charliteral">&apos;a&apos;</emphasis>&#32;+&#32;record.x1)&#32;&lt;&lt;&#32;8&#32;-&#32;record.y1&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00106"/>00106 
<anchor xml:id="_Board_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;Moved&#32;Piece:&#32;&quot;</emphasis>&#32;
<anchor xml:id="_Board_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;(record.movedPiece&#32;?&#32;record.movedPiece-&gt;Symbol()&#32;:&#32;<emphasis role="stringliteral">&quot;None&quot;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00109"/>00109 
<anchor xml:id="_Board_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;Captured&#32;Piece:&#32;&quot;</emphasis>&#32;
<anchor xml:id="_Board_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;(record.capturedPiece&#32;?&#32;record.capturedPiece-&gt;Symbol()&#32;:&#32;<emphasis role="stringliteral">&quot;None&quot;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00112"/>00112 
<anchor xml:id="_Board_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;Replacement&#32;Piece&#32;(Promotion):&#32;&quot;</emphasis>&#32;
<anchor xml:id="_Board_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;(record.replacementPiece&#32;?&#32;record.replacementPiece-&gt;Symbol()&#32;:&#32;<emphasis role="stringliteral">&quot;None&quot;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00115"/>00115 
<anchor xml:id="_Board_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;En&#32;Passant&#32;Used:&#32;&quot;</emphasis>&#32;
<anchor xml:id="_Board_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;(record.enPassantUsed&#32;?&#32;<emphasis role="stringliteral">&quot;Yes&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;No&quot;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00118"/>00118 
<anchor xml:id="_Board_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;Previous&#32;En&#32;Passant&#32;State:\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;Available:&#32;&quot;</emphasis>&#32;
<anchor xml:id="_Board_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;(record.prevEnPassantAvailable&#32;?&#32;<emphasis role="stringliteral">&quot;Yes&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;No&quot;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00122"/>00122 
<anchor xml:id="_Board_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(record.prevEnPassantAvailable)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;Position:&#32;&quot;</emphasis>&#32;
<anchor xml:id="_Board_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;char(<emphasis role="charliteral">&apos;a&apos;</emphasis>&#32;+&#32;record.prevEnPassantX)&#32;
<anchor xml:id="_Board_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;8&#32;-&#32;record.prevEnPassantY&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00128"/>00128 
<anchor xml:id="_Board_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;-----------------------------------------\n&quot;</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00130"/>00130 }
<anchor xml:id="_Board_8cpp_source_1l00131"/>00131 
<anchor xml:id="_Board_8cpp_source_1l00132"/>00132 
<anchor xml:id="_Board_8cpp_source_1l00133"/>00133 <emphasis role="keywordtype">bool</emphasis>&#32;Board::ExecuteMove(Move&#32;&amp;move,&#32;Player*&#32;executor)
<anchor xml:id="_Board_8cpp_source_1l00134"/>00134 {
<anchor xml:id="_Board_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x0&#32;=&#32;move.getStartX(),&#32;y0&#32;=&#32;move.getStartY();
<anchor xml:id="_Board_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x1&#32;=&#32;move.getEndX(),&#32;y1&#32;=&#32;move.getEndY();
<anchor xml:id="_Board_8cpp_source_1l00137"/>00137 
<anchor xml:id="_Board_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;Piece*&#32;moving&#32;=&#32;m_board[y0][x0];
<anchor xml:id="_Board_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;Piece*&#32;target&#32;=&#32;m_board[y1][x1];&#32;&#32;<emphasis role="comment">//&#32;Target&#32;piece&#32;(if&#32;any)</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;Piece*&#32;replacement&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00141"/>00141 
<anchor xml:id="_Board_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!moving&#32;||&#32;moving-&gt;Color()&#32;!=&#32;executor-&gt;Color())&#32;{
<anchor xml:id="_Board_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00145"/>00145 
<anchor xml:id="_Board_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Ensure&#32;the&#32;move&#32;is&#32;valid&#32;for&#32;the&#32;selected&#32;piece.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!moving-&gt;IsValidMove(target,&#32;<emphasis role="keyword">this</emphasis>,&#32;move,&#32;replacement))&#32;{
<anchor xml:id="_Board_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00150"/>00150 
<anchor xml:id="_Board_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;wasInCheck&#32;=&#32;IsKingChecked(executor-&gt;Color());
<anchor xml:id="_Board_8cpp_source_1l00152"/>00152 
<anchor xml:id="_Board_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Execute&#32;the&#32;move&#32;and&#32;capture&#32;the&#32;move&#32;state.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;MoveRecord&#32;record&#32;=&#32;CommitMoveRecord(move,&#32;replacement);
<anchor xml:id="_Board_8cpp_source_1l00155"/>00155 
<anchor xml:id="_Board_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;king&#32;was&#32;in&#32;check&#32;and&#32;the&#32;move&#32;doesn&apos;t&#32;resolve&#32;it,&#32;revert.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wasInCheck&#32;&amp;&amp;&#32;IsKingChecked(executor-&gt;Color()))&#32;{
<anchor xml:id="_Board_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RevertMoveRecord(record);
<anchor xml:id="_Board_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_Board_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00162"/>00162 
<anchor xml:id="_Board_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;move&#32;puts&#32;the&#32;player&apos;s&#32;own&#32;king&#32;in&#32;check.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsKingChecked(executor-&gt;Color()))&#32;{
<anchor xml:id="_Board_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Revert&#32;the&#32;move&#32;using&#32;the&#32;saved&#32;state.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RevertMoveRecord(record);
<anchor xml:id="_Board_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00169"/>00169 
<anchor xml:id="_Board_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;a&#32;capture&#32;was&#32;made,&#32;record&#32;it.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(record.capturedPiece)
<anchor xml:id="_Board_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;executor-&gt;AddCapture(record.capturedPiece);
<anchor xml:id="_Board_8cpp_source_1l00173"/>00173 
<anchor xml:id="_Board_8cpp_source_1l00174"/>00174 
<anchor xml:id="_Board_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;check&#32;state&#32;for&#32;opponent.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;SetKingChecked(moving-&gt;Color()&#32;==&#32;PieceColor::WHITE&#32;?&#32;PieceColor::BLACK&#32;:&#32;PieceColor::WHITE);
<anchor xml:id="_Board_8cpp_source_1l00177"/>00177 
<anchor xml:id="_Board_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Handle&#32;en&#32;passant&#32;state&#32;if&#32;applicable.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">dynamic_cast&lt;</emphasis>Pawn*<emphasis role="keyword">&gt;</emphasis>(moving)&#32;&amp;&amp;&#32;std::abs(y1&#32;-&#32;y0)&#32;==&#32;2)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_enPassantAvailable&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_enPassantX&#32;=&#32;x0;
<anchor xml:id="_Board_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_enPassantY&#32;=&#32;y0&#32;+&#32;(y1&#32;-&#32;y0)&#32;/&#32;2;
<anchor xml:id="_Board_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Board_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ClearEnPassantTarget();
<anchor xml:id="_Board_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00186"/>00186 
<anchor xml:id="_Board_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00188"/>00188 }
<anchor xml:id="_Board_8cpp_source_1l00189"/>00189 
<anchor xml:id="_Board_8cpp_source_1l00190"/>00190 
<anchor xml:id="_Board_8cpp_source_1l00191"/>00191 Piece*&#32;Board::GetPiece(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)<emphasis role="keyword">&#32;const&#32;</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00192"/>00192 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_Board_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_board[y][x];
<anchor xml:id="_Board_8cpp_source_1l00194"/>00194 }
<anchor xml:id="_Board_8cpp_source_1l00195"/>00195 
<anchor xml:id="_Board_8cpp_source_1l00196"/>00196 <emphasis role="keywordtype">bool</emphasis>&#32;Board::IsEnPassantTarget(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00197"/>00197 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_Board_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_enPassantAvailable&#32;&amp;&amp;&#32;(x&#32;==&#32;m_enPassantX)&#32;&amp;&amp;&#32;(y&#32;==&#32;m_enPassantY);
<anchor xml:id="_Board_8cpp_source_1l00199"/>00199 }
<anchor xml:id="_Board_8cpp_source_1l00200"/>00200 
<anchor xml:id="_Board_8cpp_source_1l00201"/>00201 <emphasis role="keywordtype">void</emphasis>&#32;Board::ClearEnPassantTarget()
<anchor xml:id="_Board_8cpp_source_1l00202"/>00202 {
<anchor xml:id="_Board_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;m_enPassantAvailable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;m_enPassantX&#32;=&#32;-1;
<anchor xml:id="_Board_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;m_enPassantY&#32;=&#32;-1;
<anchor xml:id="_Board_8cpp_source_1l00206"/>00206 }
<anchor xml:id="_Board_8cpp_source_1l00207"/>00207 
<anchor xml:id="_Board_8cpp_source_1l00208"/>00208 <emphasis role="comment">//&#32;Returns&#32;true&#32;if&#32;the&#32;king&#32;of&#32;the&#32;specified&#32;color&#32;is&#32;in&#32;check.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00209"/>00209 <emphasis role="keywordtype">bool</emphasis>&#32;Board::IsKingChecked(Color&#32;color)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00210"/>00210 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_Board_8cpp_source_1l00211"/>00211 
<anchor xml:id="_Board_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;the&#32;king&#32;of&#32;the&#32;specified&#32;color.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;kingX&#32;=&#32;-1,&#32;kingY&#32;=&#32;-1;
<anchor xml:id="_Board_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;++i)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;8;&#32;++j)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Piece*&#32;piece&#32;=&#32;m_board[i][j];
<anchor xml:id="_Board_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(piece&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>&#32;&amp;&amp;&#32;piece-&gt;Color()&#32;==&#32;color&#32;&amp;&amp;&#32;piece-&gt;IsKing())&#32;{
<anchor xml:id="_Board_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kingX&#32;=&#32;j;
<anchor xml:id="_Board_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kingY&#32;=&#32;i;
<anchor xml:id="_Board_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(kingX&#32;!=&#32;-1)
<anchor xml:id="_Board_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;
<anchor xml:id="_Board_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;king&#32;was&#32;not&#32;found&#32;(should&#32;not&#32;happen&#32;in&#32;a&#32;standard&#32;game),&#32;return&#32;false.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(kingX&#32;==&#32;-1)
<anchor xml:id="_Board_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00230"/>00230 
<anchor xml:id="_Board_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;every&#32;enemy&#32;piece&#32;to&#32;see&#32;if&#32;it&#32;has&#32;a&#32;valid&#32;move&#32;to&#32;the&#32;king&apos;s&#32;position.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;++i)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;8;&#32;++j)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Piece*&#32;piece&#32;=&#32;m_board[i][j];
<anchor xml:id="_Board_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(piece&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>&#32;&amp;&amp;&#32;piece-&gt;Color()&#32;!=&#32;color)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;a&#32;temporary&#32;move&#32;from&#32;the&#32;enemy&#32;piece&apos;s&#32;position&#32;to&#32;the&#32;king&apos;s&#32;position.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Move&#32;testMove(j,&#32;i,&#32;kingX,&#32;kingY);
<anchor xml:id="_Board_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Piece*&#32;replacement&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(piece-&gt;IsValidMove(m_board[kingY][kingX],&#32;<emphasis role="keyword">const_cast&lt;</emphasis>Board*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>),&#32;testMove,&#32;replacement))
<anchor xml:id="_Board_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_Board_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;<emphasis role="comment">//&#32;King&#32;is&#32;under&#32;attack.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;No&#32;enemy&#32;piece&#32;can&#32;legally&#32;move&#32;to&#32;the&#32;king&apos;s&#32;square.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00247"/>00247 }
<anchor xml:id="_Board_8cpp_source_1l00248"/>00248 
<anchor xml:id="_Board_8cpp_source_1l00249"/>00249 <emphasis role="comment">//&#32;Updates&#32;the&#32;check&#32;state&#32;for&#32;the&#32;king&#32;of&#32;the&#32;given&#32;color&#32;and&#32;returns&#32;the&#32;result.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00250"/>00250 <emphasis role="keywordtype">bool</emphasis>&#32;Board::SetKingChecked(Color&#32;color)
<anchor xml:id="_Board_8cpp_source_1l00251"/>00251 {
<anchor xml:id="_Board_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;inCheck&#32;=&#32;IsKingChecked(color);
<anchor xml:id="_Board_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(color&#32;==&#32;PieceColor::WHITE)
<anchor xml:id="_Board_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_whiteKingInCheck&#32;=&#32;inCheck;
<anchor xml:id="_Board_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_blackKingInCheck&#32;=&#32;inCheck;
<anchor xml:id="_Board_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;inCheck;
<anchor xml:id="_Board_8cpp_source_1l00258"/>00258 }
<anchor xml:id="_Board_8cpp_source_1l00259"/>00259 
<anchor xml:id="_Board_8cpp_source_1l00262"/>00262 MoveRecord&#32;Board::CommitMoveRecord(Move&#32;&amp;move,&#32;Piece*&#32;replacement)
<anchor xml:id="_Board_8cpp_source_1l00263"/>00263 {
<anchor xml:id="_Board_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x0&#32;=&#32;move.getStartX();
<anchor xml:id="_Board_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y0&#32;=&#32;move.getStartY();
<anchor xml:id="_Board_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x1&#32;=&#32;move.getEndX();
<anchor xml:id="_Board_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y1&#32;=&#32;move.getEndY();
<anchor xml:id="_Board_8cpp_source_1l00268"/>00268 
<anchor xml:id="_Board_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;MoveRecord&#32;record;
<anchor xml:id="_Board_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;record.x0&#32;=&#32;x0;
<anchor xml:id="_Board_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;record.y0&#32;=&#32;y0;
<anchor xml:id="_Board_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;record.x1&#32;=&#32;x1;
<anchor xml:id="_Board_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;record.y1&#32;=&#32;y1;
<anchor xml:id="_Board_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;record.prevEnPassantAvailable&#32;=&#32;m_enPassantAvailable;
<anchor xml:id="_Board_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;record.prevEnPassantX&#32;=&#32;m_enPassantX;
<anchor xml:id="_Board_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;record.prevEnPassantY&#32;=&#32;m_enPassantY;
<anchor xml:id="_Board_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;
<anchor xml:id="_Board_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;record.movedPiece&#32;=&#32;m_board[y0][x0];
<anchor xml:id="_Board_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;record.replacementPiece&#32;=&#32;replacement;&#32;&#32;<emphasis role="comment">//&#32;Will&#32;be&#32;non-null&#32;for&#32;a&#32;promotion.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;record.enPassantUsed&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00281"/>00281 
<anchor xml:id="_Board_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;By&#32;default,&#32;assume&#32;the&#32;captured&#32;piece&#32;is&#32;on&#32;the&#32;target&#32;square.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;record.capturedPiece&#32;=&#32;m_board[y1][x1];
<anchor xml:id="_Board_8cpp_source_1l00284"/>00284 
<anchor xml:id="_Board_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;en&#32;passant&#32;capture:&#32;if&#32;a&#32;pawn&#32;moves&#32;diagonally&#32;into&#32;an&#32;empty&#32;square</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;that&#32;is&#32;flagged&#32;as&#32;an&#32;en&#32;passant&#32;target,&#32;then&#32;the&#32;captured&#32;pawn&#32;is&#32;adjacent.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">dynamic_cast&lt;</emphasis>Pawn*<emphasis role="keyword">&gt;</emphasis>(record.movedPiece)&#32;&amp;&amp;
<anchor xml:id="_Board_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::abs(x1&#32;-&#32;x0)&#32;==&#32;1&#32;&amp;&amp;&#32;
<anchor xml:id="_Board_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;record.capturedPiece&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>&#32;&amp;&amp;
<anchor xml:id="_Board_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IsEnPassantTarget(x1,&#32;y1))
<anchor xml:id="_Board_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;{
<anchor xml:id="_Board_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;en&#32;passant,&#32;the&#32;captured&#32;pawn&#32;is&#32;at&#32;(x1,&#32;y0).</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;record.capturedPiece&#32;=&#32;m_board[y0][x1];
<anchor xml:id="_Board_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_board[y0][x1]&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;record.enPassantUsed&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ClearEnPassantTarget();
<anchor xml:id="_Board_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00298"/>00298 
<anchor xml:id="_Board_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Perform&#32;the&#32;move.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;a&#32;promotion&#32;occurred&#32;(replacement&#32;non-null),&#32;place&#32;the&#32;replacement&#32;piece.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;m_board[y1][x1]&#32;=&#32;(replacement&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;?&#32;replacement&#32;:&#32;record.movedPiece;
<anchor xml:id="_Board_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;m_board[y0][x0]&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00303"/>00303 
<anchor xml:id="_Board_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;record;
<anchor xml:id="_Board_8cpp_source_1l00305"/>00305 }
<anchor xml:id="_Board_8cpp_source_1l00306"/>00306 
<anchor xml:id="_Board_8cpp_source_1l00309"/>00309 <emphasis role="keywordtype">void</emphasis>&#32;Board::RevertMoveRecord(<emphasis role="keyword">const</emphasis>&#32;MoveRecord&#32;&amp;record)
<anchor xml:id="_Board_8cpp_source_1l00310"/>00310 {
<anchor xml:id="_Board_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;a&#32;promotion&#32;occurred,&#32;the&#32;piece&#32;on&#32;the&#32;destination&#32;is&#32;the&#32;replacement.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;delete&#32;it&#32;and&#32;restore&#32;the&#32;original&#32;pawn.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(record.replacementPiece&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;m_board[record.y1][record.x1];
<anchor xml:id="_Board_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_board[record.y1][record.x1]&#32;=&#32;record.movedPiece;
<anchor xml:id="_Board_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Board_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;an&#32;en&#32;passant&#32;capture,&#32;the&#32;destination&#32;square&#32;should&#32;be&#32;empty,</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;the&#32;captured&#32;pawn&#32;must&#32;be&#32;restored&#32;to&#32;its&#32;original&#32;square.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(record.enPassantUsed)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_board[record.y0][record.x0]&#32;=&#32;record.movedPiece;
<anchor xml:id="_Board_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_board[record.y1][record.x1]&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_Board_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_board[record.y0][record.x1]&#32;=&#32;record.capturedPiece;
<anchor xml:id="_Board_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Board_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Standard&#32;move:&#32;restore&#32;the&#32;moved&#32;piece&#32;and&#32;captured&#32;piece.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_board[record.y0][record.x0]&#32;=&#32;record.movedPiece;
<anchor xml:id="_Board_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_board[record.y1][record.x1]&#32;=&#32;record.capturedPiece;
<anchor xml:id="_Board_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Restore&#32;the&#32;en&#32;passant&#32;state.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;m_enPassantAvailable&#32;=&#32;record.prevEnPassantAvailable;
<anchor xml:id="_Board_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;m_enPassantX&#32;=&#32;record.prevEnPassantX;
<anchor xml:id="_Board_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;m_enPassantY&#32;=&#32;record.prevEnPassantY;
<anchor xml:id="_Board_8cpp_source_1l00333"/>00333 }
<anchor xml:id="_Board_8cpp_source_1l00334"/>00334 
<anchor xml:id="_Board_8cpp_source_1l00335"/>00335 
<anchor xml:id="_Board_8cpp_source_1l00336"/>00336 std::vector&lt;Move&gt;&#32;Board::GetPossibleMoves(Color&#32;color)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00337"/>00337 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_Board_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;std::vector&lt;Move&gt;&#32;moves;
<anchor xml:id="_Board_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;++i)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;8;&#32;++j)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Piece*&#32;piece&#32;=&#32;m_board[i][j];
<anchor xml:id="_Board_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(piece&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>&#32;&amp;&amp;&#32;piece-&gt;Color()&#32;==&#32;color)&#32;{
<anchor xml:id="_Board_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;Move&gt;&#32;pieceMoves&#32;=&#32;piece-&gt;PossibleMoves(<emphasis role="keyword">const_cast&lt;</emphasis>Board*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>),&#32;j,&#32;i);
<anchor xml:id="_Board_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Insert&#32;the&#32;candidate&#32;moves&#32;into&#32;our&#32;vector.</emphasis>
<anchor xml:id="_Board_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;moves.insert(moves.end(),&#32;pieceMoves.begin(),&#32;pieceMoves.end());
<anchor xml:id="_Board_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Board_8cpp_source_1l00349"/>00349 
<anchor xml:id="_Board_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;moves;
<anchor xml:id="_Board_8cpp_source_1l00351"/>00351 }
</programlisting></section>
